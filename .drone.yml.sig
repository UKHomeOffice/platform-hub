eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIHdlYl90ZXN0c190aGVuX2J1aWxkX2Rpc3Q6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL25vZGVqcy1iYXNlOnY2LjkuMQogICAgY29tbWFuZHM6CiAgICAgIC0geXVtIGluc3RhbGwgLXkgZ2l0IGJ6aXAyIGJ6aXAyLWxpYnMgZm9udGNvbmZpZwogICAgICAtIGdpdCBjb25maWcgLS1nbG9iYWwgdXJsLiJodHRwczovLyIuaW5zdGVhZE9mIGdpdDovLwogICAgICAtIG5wbSBpbnN0YWxsIC1nIHlhcm4KICAgICAgLSBjZCBwbGF0Zm9ybS1odWItd2ViCiAgICAgIC0gcm0gLXJmIG5vZGVfbW9kdWxlcwogICAgICAtIHlhcm4KICAgICAgLSB5YXJuIHJ1biB0ZXN0CiAgICAgIC0geWFybiBydW4gYnVpbGQKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnLCBwdWxsX3JlcXVlc3RdCgogICMgRXhwZWN0cyB0aGUgb3B0aW1pemVkIGRpc3QgY29kZSB0byBoYXZlIGJlZW4gYnVpbHQKICB3ZWJfYnVpbGRfaW1hZ2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBjZCBwbGF0Zm9ybS1odWItd2ViCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHBsYXRmb3JtLWh1Yi13ZWIgLgogICAgd2hlbjoKICAgICAgZXZlbnQ6IFtwdXNoLCB0YWcsIHB1bGxfcmVxdWVzdF0KCiAgd2ViX3Rlc3RfaW1hZ2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgcnVuIC0tbmFtZSBwbGF0Zm9ybS1odWItd2ViLXRlc3QgcGxhdGZvcm0taHViLXdlYiAvYmluL3NoIC1jICJwd2QgJiYgbHMgLWxhaCAmJiB0ZXN0IC1lIGluZGV4Lmh0bWwiCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZywgcHVsbF9yZXF1ZXN0XQoKICB3ZWJfbGF0ZXN0X2ltYWdlX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrcGxhdGZvcm1faHViIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcGxhdGZvcm0taHViLXdlYiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLXdlYjpsYXRlc3QKICAgICAgLSBkb2NrZXIgdGFnIHBsYXRmb3JtLWh1Yi13ZWIgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3BsYXRmb3JtLWh1Yi13ZWI6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItd2ViOmxhdGVzdAogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItd2ViOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdXNoCiAgICAgIGJyYW5jaDogbWFzdGVyCgogIHdlYl90YWdfaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXI6MS4xMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwbGF0Zm9ybV9odWIiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBwbGF0Zm9ybS1odWItd2ViIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItd2ViOiR7RFJPTkVfVEFHfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItd2ViOiR7RFJPTkVfVEFHfQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwoKCiAgYXBpX3Rlc3RzOgogICAgaW1hZ2U6IHJ1Ynk6Mi4zLjMKICAgIGVudmlyb25tZW50OgogICAgICAtIFNFQ1JFVF9LRVlfQkFTRT1mb29iYXIKICAgICAgLSBHSVRIVUJfQ0xJRU5UX0lEPU5BCiAgICAgIC0gR0lUSFVCX0NMSUVOVF9TRUNSRVQ9TkEKICAgICAgLSBBR0VOVF9HSVRIVUJfVE9LRU49bm9vcAogICAgICAtIEFHRU5UX0dJVEhVQl9PUkc9bm9vcAogICAgICAtIEFHRU5UX0dJVEhVQl9PUkdfTUFJTl9URUFNX0lEPW5vb3AKICAgICAgLSBBUFBfQkFTRV9VUkw9Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIKICAgIGNvbW1hbmRzOgogICAgICAtIGVjaG8gImRlYiBodHRwOi8vYXB0LnBvc3RncmVzcWwub3JnL3B1Yi9yZXBvcy9hcHQvIGplc3NpZS1wZ2RnIG1haW4iID4-IC9ldGMvYXB0L3NvdXJjZXMubGlzdC5kL3BnZGcubGlzdAogICAgICAtIHdnZXQgLS1xdWlldCAtTyAtIGh0dHBzOi8vd3d3LnBvc3RncmVzcWwub3JnL21lZGlhL2tleXMvQUNDQzRDRjguYXNjIHwgYXB0LWtleSBhZGQgLQogICAgICAtIGFwdC1nZXQgdXBkYXRlICYmIGFwdC1nZXQgaW5zdGFsbCAteSBwb3N0Z3Jlc3FsLWNsaWVudCBsaWJwcS1kZXYKICAgICAgLSBjZCBwbGF0Zm9ybS1odWItYXBpCiAgICAgIC0gYnVuZGxlIGluc3RhbGwgLS1qb2JzIDIwIC0tcmV0cnkgNSAtLWRlcGxveW1lbnQgLS1uby1jYWNoZQogICAgICAtIGJpbi9zZXR1cAogICAgICAtIGJ1bmRsZSBleGVjIHJzcGVjCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZywgcHVsbF9yZXF1ZXN0XQoKICBhcGlfYnVpbGRfaW1hZ2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBjZCBwbGF0Zm9ybS1odWItYXBpCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHBsYXRmb3JtLWh1Yi1hcGkgLgogICAgd2hlbjoKICAgICAgZXZlbnQ6IFtwdXNoLCB0YWcsIHB1bGxfcmVxdWVzdF0KCiAgYXBpX3Rlc3RfaW1hZ2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSA-CiAgICAgICAgZG9ja2VyIHJ1bgogICAgICAgIC0tbmFtZSBwbGF0Zm9ybS1odWItYXBpLXRlc3QKICAgICAgICAtZSBQT1JUPTMwMDAwCiAgICAgICAgLWUgUEhVQl9EQl9OQU1FPXBodWJfZGV2ZWxvcG1lbnQKICAgICAgICAtZSBQSFVCX0RCX1VTRVJOQU1FPXBodWIKICAgICAgICAtZSBQSFVCX0RCX1BBU1NXT1JEPXBodWJfcGFzc3dvcmQKICAgICAgICAtZSBSQUlMU19MT0dfVE9fU1RET1VUPXRydWUKICAgICAgICAtZSBTRUNSRVRfS0VZX0JBU0U9Zm9vYmFyCiAgICAgICAgLWUgR0lUSFVCX0NMSUVOVF9JRD1OQQogICAgICAgIC1lIEdJVEhVQl9DTElFTlRfU0VDUkVUPU5BCiAgICAgICAgLWUgQUdFTlRfR0lUSFVCX1RPS0VOPW5vb3AKICAgICAgICAtZSBBR0VOVF9HSVRIVUJfT1JHPW5vb3AKICAgICAgICAtZSBBR0VOVF9HSVRIVUJfT1JHX01BSU5fVEVBTV9JRD1ub29wCiAgICAgICAgLWUgQVBQX0JBU0VfVVJMPSJodHRwOi8vbG9jYWxob3N0OjMwMDAiCiAgICAgICAgLS1uZXQ9aG9zdAogICAgICAgIC1kCiAgICAgICAgcGxhdGZvcm0taHViLWFwaQogICAgICAgIC9iaW4vc2ggLWMgImJpbi9yYWlscyBzZXJ2ZXIiCiAgICAgIC0gc2xlZXAgNQogICAgICAtIGN1cmwgLXMgLWYgaHR0cDovLzEyNy4wLjAuMTozMDAwMC9oZWFsdGh6CiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZywgcHVsbF9yZXF1ZXN0XQoKICBhcGlfbGF0ZXN0X2ltYWdlX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrcGxhdGZvcm1faHViIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcGxhdGZvcm0taHViLWFwaSBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLWFwaTpsYXRlc3QKICAgICAgLSBkb2NrZXIgdGFnIHBsYXRmb3JtLWh1Yi1hcGkgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3BsYXRmb3JtLWh1Yi1hcGk6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItYXBpOmxhdGVzdAogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItYXBpOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdXNoCiAgICAgIGJyYW5jaDogbWFzdGVyCgogIGFwaV90YWdfaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXI6MS4xMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwbGF0Zm9ybV9odWIiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBwbGF0Zm9ybS1odWItYXBpIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItYXBpOiR7RFJPTkVfVEFHfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItYXBpOiR7RFJPTkVfVEFHfQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwoKc2VydmljZXM6CgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOjEuMTItZGluZAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZDoKICAgICAgLSAiLXMiCiAgICAgIC0gIm92ZXJsYXkiCgogIHBvc3RncmVzOgogICAgaW1hZ2U6IHBvc3RncmVzOjkuNi4xCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBQT1NUR1JFU19VU0VSPXBodWIKICAgICAgLSBQT1NUR1JFU19QQVNTV09SRD1waHViX3Bhc3N3b3JkCg.3BPHbluEsAcEJSua4TT7gWGDxxU-qwV8oRH8Te7BN8I