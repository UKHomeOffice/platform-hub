eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIHdlYl90ZXN0c190aGVuX2J1aWxkX2Rpc3Q6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL25vZGVqcy1iYXNlOnY2LjkuMQogICAgY29tbWFuZHM6CiAgICAgIC0geXVtIGluc3RhbGwgLXkgZ2l0IGJ6aXAyIGJ6aXAyLWxpYnMgZm9udGNvbmZpZwogICAgICAtIGdpdCBjb25maWcgLS1nbG9iYWwgdXJsLiJodHRwczovLyIuaW5zdGVhZE9mIGdpdDovLwogICAgICAtIG5wbSBpbnN0YWxsIC1nIHlhcm5AMC4yNy41CiAgICAgIC0gY2QgcGxhdGZvcm0taHViLXdlYgogICAgICAtIHJtIC1yZiBub2RlX21vZHVsZXMKICAgICAgLSB5YXJuCiAgICAgIC0geWFybiBydW4gdGVzdAogICAgICAtIHlhcm4gcnVuIGJ1aWxkCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZ10KCiAgIyBFeHBlY3RzIHRoZSBvcHRpbWl6ZWQgZGlzdCBjb2RlIHRvIGhhdmUgYmVlbiBidWlsdAogIHdlYl9idWlsZF9pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIHBsYXRmb3JtLWh1Yi13ZWIKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgcGxhdGZvcm0taHViLXdlYiAuCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZ10KCiAgd2ViX3Rlc3RfaW1hZ2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgcnVuIC0tbmFtZSBwbGF0Zm9ybS1odWItd2ViLXRlc3QgcGxhdGZvcm0taHViLXdlYiAvYmluL3NoIC1jICJwd2QgJiYgbHMgLWxhaCAmJiB0ZXN0IC1lIGluZGV4Lmh0bWwiCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZ10KCiAgd2ViX2xhdGVzdF9pbWFnZV90b19xdWF5OgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGxvZ2luIC11PSJ1a2hvbWVvZmZpY2VkaWdpdGFsK3BsYXRmb3JtX2h1YiIgLXA9JHtET0NLRVJfUEFTU1dPUkR9IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIHBsYXRmb3JtLWh1Yi13ZWIgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3BsYXRmb3JtLWh1Yi13ZWI6bGF0ZXN0CiAgICAgIC0gZG9ja2VyIHRhZyBwbGF0Zm9ybS1odWItd2ViIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItd2ViOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLXdlYjpsYXRlc3QKICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLXdlYjoke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IG1hc3RlcgoKICB3ZWJfdGFnX2ltYWdlX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrcGxhdGZvcm1faHViIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcGxhdGZvcm0taHViLXdlYiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLXdlYjoke0RST05FX1RBR30KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLXdlYjoke0RST05FX1RBR30KICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKCgogIGFwaV90ZXN0czoKICAgIGltYWdlOiBhbHBpbmU6My41CiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBTRUNSRVRfS0VZX0JBU0U9JChoZWFkIC1jMzAgPCAvZGV2L3VyYW5kb20gfCBiYXNlNjQpCiAgICAgIC0gR0lUSFVCX0NMSUVOVF9JRD1OQQogICAgICAtIEdJVEhVQl9DTElFTlRfU0VDUkVUPU5BCiAgICAgIC0gQUdFTlRfR0lUSFVCX1RPS0VOPW5vb3AKICAgICAgLSBBR0VOVF9HSVRIVUJfT1JHPW5vb3AKICAgICAgLSBBR0VOVF9HSVRIVUJfT1JHX01BSU5fVEVBTV9JRD1ub29wCiAgICAgIC0gQUdFTlRfS0VZQ0xPQUtfQ0xJRU5UX0lEPW5vb3AKICAgICAgLSBBR0VOVF9LRVlDTE9BS19DTElFTlRfU0VDUkVUPW5vb3AKICAgICAgLSBBR0VOVF9LRVlDTE9BS19VU0VSTkFNRT1ub29wCiAgICAgIC0gQUdFTlRfS0VZQ0xPQUtfUEFTU1dPUkQ9bm9vcAogICAgICAtIEFHRU5UX0tFWUNMT0FLX0JBU0VfVVJMPW5vb3AKICAgICAgLSBBR0VOVF9LRVlDTE9BS19SRUFMTT1ub29wCiAgICAgIC0gQVBQX0JBU0VfVVJMPSJodHRwOi8vbG9jYWxob3N0OjMwMDAiCiAgICAgIC0gRU1BSUxfRlJPTV9BRERSRVNTPSJ0ZXN0QGV4YW1wbGUub3JnIgogICAgICAtIEVNQUlMX01BWF9UT19BRERSRVNTRVM9MTAKICAgICAgLSBTTEFDS19XRUJIT09LPW5vb3AKICAgIGNvbW1hbmRzOgogICAgICAtIGFwayB1cGRhdGUgJiYgYXBrIHVwZ3JhZGUKICAgICAgLSBhcGsgLS11cGRhdGUgYWRkIGNhLWNlcnRpZmljYXRlcyBvcGVuc3NsCiAgICAgIC0gdXBkYXRlLWNhLWNlcnRpZmljYXRlcwogICAgICAtIGFwayAtLXVwZGF0ZSBhZGQgYmFzaCBydWJ5IHJ1YnktaXJiIHJ1YnktcmFrZSBydWJ5LWlvLWNvbnNvbGUgcnVieS1qc29uIHJ1YnktYmlnZGVjaW1hbCBsaWJzdGRjKysgdHpkYXRhIHBvc3RncmVzcWwtY2xpZW50CiAgICAgIC0gYXBrIC0tdXBkYXRlIGFkZCBidWlsZC1iYXNlIHJ1YnktZGV2IGxpYmMtZGV2IHBvc3RncmVzcWwtZGV2IGxpYnhtbDItZGV2IGxpYnhzbHQtZGV2IGxpYmZmaS1kZXYKICAgICAgLSAiZWNobyAnZ2VtOiAtLW5vLWRvY3VtZW50JyA-IC9ldGMvZ2VtcmMgJiYgZ2VtIGluc3RhbGwgYnVuZGxlciAtdiAxLjE0LjYiCiAgICAgIC0gY2QgcGxhdGZvcm0taHViLWFwaQogICAgICAtICIvYmluL2Jhc2ggLWMgJ2J1bmRsZSBpbnN0YWxsIC0tam9icyAyMCAtLXJldHJ5IDUgLS1kZXBsb3ltZW50IC0tbm8tY2FjaGUnIgogICAgICAtICIvYmluL2Jhc2ggLWMgJ2Jpbi9zZXR1cCAmJiBidW5kbGUgZXhlYyByc3BlYyciCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZ10KCiAgYXBpX2J1aWxkX2ltYWdlOgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgcGxhdGZvcm0taHViLWFwaQogICAgICAtIGRvY2tlciBidWlsZCAtdCBwbGF0Zm9ybS1odWItYXBpIC4KICAgIHdoZW46CiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQoKICBhcGlfdGVzdF9pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtID4KICAgICAgICBkb2NrZXIgcnVuCiAgICAgICAgLS1uYW1lIHBsYXRmb3JtLWh1Yi1hcGktdGVzdAogICAgICAgIC1lIFBPUlQ9MzAwMDAKICAgICAgICAtZSBQSFVCX0RCX05BTUU9cGh1Yl9kZXZlbG9wbWVudAogICAgICAgIC1lIFBIVUJfREJfVVNFUk5BTUU9cGh1YgogICAgICAgIC1lIFBIVUJfREJfUEFTU1dPUkQ9cGh1Yl9wYXNzd29yZAogICAgICAgIC1lIFJBSUxTX0xPR19UT19TVERPVVQ9dHJ1ZQogICAgICAgIC1lIFNFQ1JFVF9LRVlfQkFTRT0kKGhlYWQgLWMzMCA8IC9kZXYvdXJhbmRvbSB8IGJhc2U2NCkKICAgICAgICAtZSBHSVRIVUJfQ0xJRU5UX0lEPU5BCiAgICAgICAgLWUgR0lUSFVCX0NMSUVOVF9TRUNSRVQ9TkEKICAgICAgICAtZSBBR0VOVF9HSVRIVUJfVE9LRU49bm9vcAogICAgICAgIC1lIEFHRU5UX0dJVEhVQl9PUkc9bm9vcAogICAgICAgIC1lIEFHRU5UX0dJVEhVQl9PUkdfTUFJTl9URUFNX0lEPW5vb3AKICAgICAgICAtZSBBR0VOVF9LRVlDTE9BS19DTElFTlRfSUQ9bm9vcAogICAgICAgIC1lIEFHRU5UX0tFWUNMT0FLX0NMSUVOVF9TRUNSRVQ9bm9vcAogICAgICAgIC1lIEFHRU5UX0tFWUNMT0FLX1VTRVJOQU1FPW5vb3AKICAgICAgICAtZSBBR0VOVF9LRVlDTE9BS19QQVNTV09SRD1ub29wCiAgICAgICAgLWUgQUdFTlRfS0VZQ0xPQUtfQkFTRV9VUkw9bm9vcAogICAgICAgIC1lIEFHRU5UX0tFWUNMT0FLX1JFQUxNPW5vb3AKICAgICAgICAtZSBBUFBfQkFTRV9VUkw9Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIKICAgICAgICAtZSBFTUFJTF9GUk9NX0FERFJFU1M9InRlc3RAZXhhbXBsZS5vcmciCiAgICAgICAgLWUgRU1BSUxfTUFYX1RPX0FERFJFU1NFUz0xMAogICAgICAgIC1lIFNMQUNLX1dFQkhPT0s9bm9vcAogICAgICAgIC0tbmV0PWhvc3QKICAgICAgICAtZAogICAgICAgIHBsYXRmb3JtLWh1Yi1hcGkKICAgICAgICBiaW4vcmFpbHMgc2VydmVyCiAgICAgIC0gc2xlZXAgNQogICAgICAtIGN1cmwgLXMgLWYgaHR0cDovLzEyNy4wLjAuMTozMDAwMC9oZWFsdGh6CiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZ10KCiAgYXBpX2xhdGVzdF9pbWFnZV90b19xdWF5OgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGxvZ2luIC11PSJ1a2hvbWVvZmZpY2VkaWdpdGFsK3BsYXRmb3JtX2h1YiIgLXA9JHtET0NLRVJfUEFTU1dPUkR9IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIHBsYXRmb3JtLWh1Yi1hcGkgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3BsYXRmb3JtLWh1Yi1hcGk6bGF0ZXN0CiAgICAgIC0gZG9ja2VyIHRhZyBwbGF0Zm9ybS1odWItYXBpIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wbGF0Zm9ybS1odWItYXBpOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLWFwaTpsYXRlc3QKICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLWFwaToke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IG1hc3RlcgoKICBhcGlfdGFnX2ltYWdlX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrcGxhdGZvcm1faHViIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcGxhdGZvcm0taHViLWFwaSBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLWFwaToke0RST05FX1RBR30KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcGxhdGZvcm0taHViLWFwaToke0RST05FX1RBR30KICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKCnNlcnZpY2VzOgoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyLWRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5IgoKICBwb3N0Z3JlczoKICAgIGltYWdlOiBwb3N0Z3Jlczo5LjYuMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gUE9TVEdSRVNfVVNFUj1waHViCiAgICAgIC0gUE9TVEdSRVNfUEFTU1dPUkQ9cGh1Yl9wYXNzd29yZAo.95nNf1x92DaI5VIt14SYpvIpQWvAlQi49mdP19ppFJo