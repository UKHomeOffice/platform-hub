kind: pipeline
name: default
type: kubernetes

platform:
  os: linux
  arch: amd64

steps:
- name: web_tests_then_build_dist
  image: quay.io/ukhomeofficedigital/nodejs-base:v6.9.1
  commands:
    - yum install -y git bzip2 bzip2-libs fontconfig
    - git config --global url."https://".insteadOf git://
    - npm install -g yarn@0.27.5
    - cd platform-hub-web
    - rm -rf node_modules
    - yarn
    - yarn run test
    - yarn run build
  when:
    event: [push, tag]

  # Expects the optimized dist code to have been built
- name: web_build_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - cd platform-hub-web
    # wait for docker service to be up before running docker build.
    - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
    - docker build -t platform-hub-web:$${DRONE_COMMIT_SHA} .
  when:
    event: [push, tag]

- name: web_test_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker run -t --rm --name platform-hub-web-test platform-hub-web:${DRONE_COMMIT_SHA} sh -c "cd /app; ls -lah; test -e index.html"
  when:
    event: [push, tag]

- name: web_scan_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  environment:
    IMAGE_NAME: platform-hub-web:${DRONE_COMMIT_SHA}
    SERVICE_URL: http://anchore-submission-server:10080
    WHITELIST: CVE-2021-28831
  when:
    event: [push, tag]

- name: web_latest_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-web:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-web:$${DRONE_COMMIT_SHA}
    - docker tag platform-hub-web:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-web:latest
    - docker push quay.io/ukhomeofficedigital/platform-hub-web:$${DRONE_COMMIT_SHA}
    - docker push quay.io/ukhomeofficedigital/platform-hub-web:latest
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: push
    branch: master

- name: web_tag_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-web:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-web:$${DRONE_TAG}
    - docker push quay.io/ukhomeofficedigital/platform-hub-web:$${DRONE_TAG}
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: tag

- name: api_tests
  image: ruby:2.3.8-alpine
  environment:
    PHUB_DB_HOST: postgres
  commands:
    - apk -U add ca-certificates libressl postgresql-client postgresql-dev build-base make
    - update-ca-certificates
    - "echo 'gem: --no-document' > /etc/gemrc && gem install bundler -v 2.1.4"
    - cd platform-hub-api
    - bundle install --jobs 20 --retry 5 --deployment
    - ./test.sh
  when:
    event: [push, tag]

- name: api_build_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - cd platform-hub-api
    # wait for docker service to be up before running docker build.
    - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
    - docker build -t platform-hub-api:$${DRONE_COMMIT_SHA} .
  when:
    event: [push, tag]

- name: api_test_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  environment:
    POSTGRES_USER: phub
    POSTGRES_PASSWORD: phub_password
  commands:
    - docker run -d --name phub-api-postgres-${DRONE_BUILD_NUMBER} -e POSTGRES_USER -e POSTGRES_PASSWORD postgres:12.8
    - sleep 5
    - docker run --name phub-api-${DRONE_BUILD_NUMBER} -t --rm --env-file=platform-hub-api/.env.test -e PHUB_DB_HOST=phub-api-postgres-${DRONE_BUILD_NUMBER} --link phub-api-postgres-${DRONE_BUILD_NUMBER} platform-hub-api:${DRONE_COMMIT_SHA} /bin/bash -c "cd /app; bin/setup; bin/rails server -d; sleep 5; curl -s -f http://127.0.0.1:3000/healthz"
  when:
    event: [push, tag]

- name: cleanup_postgres
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker rm -f phub-api-postgres-${DRONE_BUILD_NUMBER}
  when:
    event: [push, tag]
    status: [success, failure]

- name: api_scan_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  environment:
    IMAGE_NAME: platform-hub-api:${DRONE_COMMIT_SHA}
    SERVICE_URL: http://anchore-submission-server:10080
    WHITELIST:  CVE-2020-8164,CVE-2020-8165,CVE-2020-8162,CVE-2019-5420,CVE-2021-22880,CVE-2021-29509,CVE-2021-32740,CVE-2021-22904,CVE-2020-36327
  when:
    event: [push, tag]

- name: api_latest_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-api:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-api:$${DRONE_COMMIT_SHA}
    - docker tag platform-hub-api:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-api:latest
    - docker push quay.io/ukhomeofficedigital/platform-hub-api:$${DRONE_COMMIT_SHA}
    - docker push quay.io/ukhomeofficedigital/platform-hub-api:latest
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: push
    branch: master

- name: api_tag_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-api:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-api:$${DRONE_TAG}
    - docker push quay.io/ukhomeofficedigital/platform-hub-api:$${DRONE_TAG}
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: tag

- name: cron_job_build_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - cd platform-hub-cron-job
    # wait for docker service to be up before running docker build.
    - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
    - docker build -t platform-hub-cron-job:$${DRONE_COMMIT_SHA} .
  when:
    event: [push, tag]

- name: cron_job_tag_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-cron-job:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-cron-job:$${DRONE_TAG}
    - docker push quay.io/ukhomeofficedigital/platform-hub-cron-job:$${DRONE_TAG}
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: tag

- name: cron_job_latest_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-cron-job:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-cron-job:$${DRONE_COMMIT_SHA}
    - docker tag platform-hub-cron-job:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-cron-job:latest
    - docker push quay.io/ukhomeofficedigital/platform-hub-cron-job:$${DRONE_COMMIT_SHA}
    - docker push quay.io/ukhomeofficedigital/platform-hub-cron-job:latest
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: push
    branch: master

- name: no_expiry_token_cron_job_build_image
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - cd platform-hub-no-expiry-token-job
    # wait for docker service to be up before running docker build.
    - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
    - docker build -t platform-hub-no-expiry-token-job:$${DRONE_COMMIT_SHA} .
  when:
    event: [push, tag]

- name: no_expiry_token_cron_job_tag_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-no-expiry-token-job:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-no-expiry-token-job:$${DRONE_TAG}
    - docker push quay.io/ukhomeofficedigital/platform-hub-no-expiry-token-job:$${DRONE_TAG}
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: tag

- name: no_expiry_token_cron_job_latest_image_to_quay
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
    - docker login -u="ukhomeofficedigital+platform_hub" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag platform-hub-no-expiry-token-job:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-no-expiry-token-job:$${DRONE_COMMIT_SHA}
    - docker tag platform-hub-no-expiry-token-job:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/platform-hub-no-expiry-token-job:latest
    - docker push quay.io/ukhomeofficedigital/platform-hub-no-expiry-token-job:$${DRONE_COMMIT_SHA}
    - docker push quay.io/ukhomeofficedigital/platform-hub-no-expiry-token-job:latest
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event: push
    branch: master
    
services:
- name: docker
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

- name: anchore-submission-server
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  commands:
    - /anchore-submission server
  environment:
    ANCHORE_URL: "acp-anchore.acp.homeoffice.gov.uk"
    REGISTRY_URL: "acp-ephemeral-registry.acp.homeoffice.gov.uk"
    DOCKER_SERVER: tcp://127.0.0.1:2375

- name: postgres
  image: postgres:12.8
  ports:
  - 5432
  environment:
    POSTGRES_USER: phub
    POSTGRES_PASSWORD: phub_password
